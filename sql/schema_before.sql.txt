-- 修正前のテーブル定義（行政区コードなし）
CREATE TABLE IF NOT EXISTS tax_assessment (
    id SERIAL PRIMARY KEY,
    municipality_code VARCHAR(6) NOT NULL,       -- 自治体コードのみ
    assessment_year INTEGER NOT NULL,
    individual_number VARCHAR(12) NOT NULL,
    history_number INTEGER NOT NULL DEFAULT 1,
    taxpayer_name VARCHAR(100) NOT NULL,
    tax_amount DECIMAL(15,2) NOT NULL,
    tax_notice_issue_date DATE,
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 修正前のインデックス
CREATE INDEX IF NOT EXISTS idx_tax_assessment_municipality_year 
ON tax_assessment (municipality_code, assessment_year);

CREATE INDEX IF NOT EXISTS idx_tax_assessment_individual_history 
ON tax_assessment (individual_number, history_number DESC);

-- 更新日時自動更新トリガー
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_tax_assessment_updated_at
    BEFORE UPDATE ON tax_assessment
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TABLE taxpayer_info (
    city_code VARCHAR(6) NOT NULL,
    pre_merge_city_code VARCHAR(6),
    tax_year INTEGER,
    taxpayer_no VARCHAR(15) NOT NULL,
    person_hist_no INTEGER NOT NULL,
    is_latest BOOLEAN,
    city_ward_code VARCHAR(12),
    undeclared_flag VARCHAR(1),
    priority_tax_data_type VARCHAR(2),
    resident_category VARCHAR(1),
    addr_postal_code VARCHAR(7),
    addr_full VARCHAR(300),
    addr_city_code VARCHAR(6),
    addr_town_code VARCHAR(7),
    addr_prefecture VARCHAR(4),
    addr_city_name VARCHAR(12),
    addr_town VARCHAR(120),
    addr_house_no VARCHAR(50),
    addr_apartment VARCHAR(300),
    name_kana VARCHAR(100),
    last_name_kana VARCHAR(50),
    first_name_kana VARCHAR(50),
    name VARCHAR(100),
    last_name VARCHAR(50),
    first_name VARCHAR(50),
    gender VARCHAR(1),
    birth_date DATE,
    relation_code1 VARCHAR(2),
    relation_code2 VARCHAR(2),
    relation_code3 VARCHAR(2),
    relation_code4 VARCHAR(2),
    name_foreign_kanji VARCHAR(100),
    name_foreign_roman VARCHAR(100),
    alias_name VARCHAR(100),
    alias_kana VARCHAR(100),
    visa_status VARCHAR(3),
    visa_period_year VARCHAR(2),
    visa_period_month VARCHAR(2),
    visa_period_day VARCHAR(3),
    visa_expiry_date DATE,
    name_priority_type VARCHAR(2),
    nationality_code VARCHAR(3),
    nationality_name VARCHAR(100),
    resident_status VARCHAR(1),
    resident_since DATE,
    move_date DATE,
    move_notice_date DATE,
    move_reason VARCHAR(2),
    move_out_planned_date DATE,
    move_out_notice_date DATE,
    move_out_confirmed_date DATE,
    removal_notice_date DATE,
    removal_move_date DATE,
    removal_reason VARCHAR(2),
    my_number VARCHAR(12),
    prev_addr_postal_code VARCHAR(7),
    prev_addr_city_code VARCHAR(6),
    prev_addr_town_code VARCHAR(7),
    prev_addr_prefecture VARCHAR(4),
    prev_addr_city_name VARCHAR(12),
    prev_addr_town VARCHAR(120),
    prev_addr_house_no VARCHAR(50),
    prev_addr_apartment VARCHAR(300),
    prev_addr_country_code VARCHAR(3),
    prev_addr_country_name VARCHAR(200),
    prev_addr_overseas VARCHAR(300),
    next_addr_postal_code VARCHAR(7),
    next_addr_city_code VARCHAR(6),
    next_addr_town_code VARCHAR(7),
    next_addr_prefecture VARCHAR(4),
    next_addr_city_name VARCHAR(12),
    next_addr_town VARCHAR(120),
    next_addr_house_no VARCHAR(50),
    next_addr_apartment VARCHAR(300),
    household_head VARCHAR(300),
    household_no VARCHAR(15),
    widow_divorced_flag VARCHAR(2),
    domicile VARCHAR(100),
    domicile_prefecture VARCHAR(4),
    domicile_city_name VARCHAR(12),
    domicile_town VARCHAR(120),
    domicile_lot_no VARCHAR(50),
    nhip_payment_special NUMERIC(13),
    nhip_payment_regular NUMERIC(13),
    nhip_status VARCHAR(1),
    care_payment_special NUMERIC(16),
    care_payment_regular NUMERIC(16),
    care_status VARCHAR(1),
    welfare_start_date DATE,
    welfare_end_date DATE,
    welfare_suspend_date DATE,
    welfare_resume_date DATE,
    welfare_type VARCHAR(2),
    late_elderly_payment_special NUMERIC(13),
    late_elderly_payment_regular NUMERIC(13),
    late_elderly_status VARCHAR(1),
    disability_cert_type VARCHAR(1),
    disability_grade VARCHAR(2),
    disability_cert_issue_date DATE,
    disability_cert_return_date DATE,
    disability_cert_reissue_date DATE,
    mental_disability_expire_date DATE,
    out_of_resident_tax_flag VARCHAR(1),
    out_of_resident_tax_city_code VARCHAR(6),
    out_of_resident_tax_prefecture VARCHAR(6),
    out_of_resident_tax_city_name VARCHAR(12),
    out_of_resident_tax_town VARCHAR(120),
    out_of_resident_tax_house_no VARCHAR(50),
    out_of_resident_tax_apartment VARCHAR(300),
    out_of_resident_notice_result VARCHAR(1),
    other_municipality_tax_flag VARCHAR(1),
    other_municipality_code VARCHAR(6),
    other_municipality_prefecture VARCHAR(6),
    other_municipality_city_name VARCHAR(12),
    other_municipality_town VARCHAR(120),
    other_municipality_house_no VARCHAR(50),
    other_municipality_apartment VARCHAR(300),
    tax_declaration_send_flag VARCHAR(1),
    declaration_transfer_term_type VARCHAR(2),
    declaration_notice_send_flag VARCHAR(1),
    office_house_tax_declaration_send_flag VARCHAR(1),
    basic_pension_no VARCHAR(10),
    city_tax_office_code VARCHAR(5),
    overseas_period_start DATE,
    overseas_period_end DATE,
    memo VARCHAR(2000),
    is_deleted BOOLEAN NOT NULL,
    operator_id VARCHAR(10),
    operated_at DATE,
    operated_time TIME,
    PRIMARY KEY (city_code, taxpayer_no, person_hist_no)
);
CREATE TABLE individual_resident_tax_assessment (
    city_code VARCHAR(6) NOT NULL,
    pre_merge_city_code VARCHAR(6),
    tax_year INTEGER NOT NULL,
    taxpayer_no VARCHAR(15) NOT NULL,
    assessment_history_no INTEGER NOT NULL,
    is_latest BOOLEAN,
    city_ward_code VARCHAR(12),
    special_collection_agent_no VARCHAR(12),
    collection_type VARCHAR(1),
    tax_exemption_type VARCHAR(1),
    forest_env_tax_exemption_type VARCHAR(1),
    forced_tax_exemption_type VARCHAR(1),
    pension_type VARCHAR(3),
    nencho_continue_type VARCHAR(1),
    non_taxable_reason_type VARCHAR(2),
    pension_suspend_type VARCHAR(2),
    next_year_provisional_suspend_type VARCHAR(2),
    blue_white_type VARCHAR(1),
    spouse_special_type VARCHAR(1),
    self_special_type VARCHAR(1),
    collective_collection_type VARCHAR(1),
    change_reason VARCHAR(3),
    change_date DATE,
    correction_date DATE,
    notice_date DATE,
    notice_reason VARCHAR(172),
    tax_notice_send_date DATE,
    change_apply_month VARCHAR(2),
    income_tax_filed_flag VARCHAR(1),
    resident_tax_filed_flag VARCHAR(1),
    income_tax_filing_date DATE,
    spouse_deduction_type VARCHAR(1),
    dependent_deduction_type VARCHAR(1),
    self_equivalent_spouse_type VARCHAR(1),
    self_disability_type VARCHAR(1),
    self_widow_type VARCHAR(1),
    self_working_student_type VARCHAR(1),
    self_minor_dependent_type VARCHAR(1),
    self_minor_type VARCHAR(1),
    self_old_type VARCHAR(1),
    jan1_divorce_remarriage_type VARCHAR(1),
    total_dependents INTEGER,
    ordinary_dependents INTEGER,
    special_dependents INTEGER,
    elderly_dependents INTEGER,
    cohabiting_elderly_dependents INTEGER,
    minor_dependents INTEGER,
    total_disabled_dependents INTEGER,
    ordinary_disabled_dependents INTEGER,
    special_disabled_dependents INTEGER,
    cohabiting_special_disabled_dependents INTEGER,
    overseas_dependents INTEGER,
    spouse_overseas_flag VARCHAR(1),
    other_special_dependents INTEGER,
    spouse_deduction_amount INTEGER,
    other_deduction_amount INTEGER,
    income_adjustment_deduction_type VARCHAR(1),
    self_medication_deduction_flag VARCHAR(1),
    special_acquisition_type VARCHAR(1),
    housing_loan_deduction_count INTEGER,
    housing_loan_deduction_limit_flag VARCHAR(1),
    housing_loan_deduction_start_date1 DATE,
    housing_loan_deduction_type1 VARCHAR(2),
    housing_loan_deduction_start_date2 DATE,
    housing_loan_deduction_type2 VARCHAR(2),
    housing_loan_deduction_note VARCHAR(65),
    foreign_tax_credit_room INTEGER,
    foreign_tax_credit_limit INTEGER,
    annual_tax_amount INTEGER,
    ordinary_collection_annual_tax_amount INTEGER,
    special_collection_annual_tax_amount INTEGER,
    nencho_annual_tax_amount INTEGER,
    prepayment_flag VARCHAR(1),
    prepayment_date DATE,
    prepayment_amount INTEGER,
    deduction_shortage_amount INTEGER,
    reduction_type VARCHAR(3),
    reduction_rate NUMERIC(5,4),
    reduction_start_month VARCHAR(2),
    reduction_start_term VARCHAR(2),
    reduction_decision_notice_date DATE,
    forest_env_tax_exemption_type2 VARCHAR(3),
    forest_env_tax_exemption_start_month VARCHAR(2),
    forest_env_tax_exemption_start_term VARCHAR(2),
    forest_env_tax_exemption_decision_date DATE,
    is_deleted BOOLEAN NOT NULL,
    operator_id VARCHAR(10),
    operated_at DATE,
    operated_time TIME,
    PRIMARY KEY (city_code, tax_year, taxpayer_no, assessment_history_no)
);
CREATE TABLE individual_resident_tax_ledger (
    city_code VARCHAR(6) NOT NULL,
    pre_merge_city_code VARCHAR(6),
    levy_year INTEGER NOT NULL,
    tax_year INTEGER NOT NULL,
    taxpayer_no VARCHAR(15) NOT NULL,
    assessment_history_no INTEGER NOT NULL,
    is_latest BOOLEAN,
    city_ward_code VARCHAR(12),
    normal_due_date1 DATE,
    normal_due_date2 DATE,
    normal_due_date3 DATE,
    normal_due_date4 DATE,
    normal_due_date5 DATE,
    normal_due_date6 DATE,
    normal_due_date7 DATE,
    normal_due_date8 DATE,
    normal_due_date9 DATE,
    normal_due_date10 DATE,
    normal_due_date11 DATE,
    normal_due_date12 DATE,
    notice_date DATE,
    normal_amount1 INTEGER,
    normal_amount2 INTEGER,
    normal_amount3 INTEGER,
    normal_amount4 INTEGER,
    normal_amount5 INTEGER,
    normal_amount6 INTEGER,
    normal_amount7 INTEGER,
    normal_amount8 INTEGER,
    normal_amount9 INTEGER,
    normal_amount10 INTEGER,
    normal_amount11 INTEGER,
    normal_amount12 INTEGER,
    normal_paid_amount1 INTEGER,
    normal_paid_amount2 INTEGER,
    normal_paid_amount3 INTEGER,
    normal_paid_amount4 INTEGER,
    normal_paid_amount5 INTEGER,
    normal_paid_amount6 INTEGER,
    normal_paid_amount7 INTEGER,
    normal_paid_amount8 INTEGER,
    normal_paid_amount9 INTEGER,
    normal_paid_amount10 INTEGER,
    normal_paid_amount11 INTEGER,
    normal_paid_amount12 INTEGER,
    normal_sp_annual_amount1 INTEGER,
    normal_sp_annual_amount2 INTEGER,
    normal_sp_annual_amount3 INTEGER,
    normal_sp_annual_amount4 INTEGER,
    normal_sp_annual_amount5 INTEGER,
    normal_sp_annual_amount6 INTEGER,
    normal_sp_annual_amount7 INTEGER,
    normal_sp_annual_amount8 INTEGER,
    normal_sp_annual_amount9 INTEGER,
    normal_sp_annual_amount10 INTEGER,
    normal_sp_annual_amount11 INTEGER,
    normal_sp_annual_amount12 INTEGER,
    notice_no VARCHAR(20),
    special_agent_no1 VARCHAR(12),
    special_agent_no2 VARCHAR(12),
    special_agent_no3 VARCHAR(12),
    special_agent_no4 VARCHAR(12),
    special_agent_no5 VARCHAR(12),
    special_agent_no6 VARCHAR(12),
    special_agent_no7 VARCHAR(12),
    special_agent_no8 VARCHAR(12),
    special_agent_no9 VARCHAR(12),
    special_agent_no10 VARCHAR(12),
    special_agent_no11 VARCHAR(12),
    special_agent_no12 VARCHAR(12),
    special_amount1 INTEGER,
    special_amount2 INTEGER,
    special_amount3 INTEGER,
    special_amount4 INTEGER,
    special_amount5 INTEGER,
    special_amount6 INTEGER,
    special_amount7 INTEGER,
    special_amount8 INTEGER,
    special_amount9 INTEGER,
    special_amount10 INTEGER,
    special_amount11 INTEGER,
    special_amount12 INTEGER,
    special_paid_amount1 INTEGER,
    special_paid_amount2 INTEGER,
    special_paid_amount3 INTEGER,
    special_paid_amount4 INTEGER,
    special_paid_amount5 INTEGER,
    special_paid_amount6 INTEGER,
    special_paid_amount7 INTEGER,
    special_paid_amount8 INTEGER,
    special_paid_amount9 INTEGER,
    special_paid_amount10 INTEGER,
    special_paid_amount11 INTEGER,
    special_paid_amount12 INTEGER,
    nencho_due_date_apr DATE,
    nencho_due_date_jun DATE,
    nencho_due_date_aug DATE,
    nencho_due_date_oct DATE,
    nencho_due_date_dec DATE,
    nencho_due_date_feb DATE,
    nencho_amount_apr INTEGER,
    nencho_amount_jun INTEGER,
    nencho_amount_aug INTEGER,
    nencho_amount_oct INTEGER,
    nencho_amount_dec INTEGER,
    nencho_amount_feb INTEGER,
    next_nencho_amount_apr INTEGER,
    next_nencho_amount_jun INTEGER,
    next_nencho_amount_aug INTEGER,
    is_deleted BOOLEAN NOT NULL,
    operator_id VARCHAR(10),
    operated_at DATE,
    operated_time TIME,
    PRIMARY KEY (city_code, levy_year, tax_year, taxpayer_no, assessment_history_no)
);
CREATE TABLE individual_resident_tax_income (
    city_code VARCHAR(6) NOT NULL,
    tax_year INTEGER NOT NULL,
    taxpayer_no VARCHAR(15) NOT NULL,
    assessment_history_no INTEGER NOT NULL,
    income_code VARCHAR(3) NOT NULL,
    is_latest BOOLEAN,
    city_ward_code VARCHAR(12),
    income_amount NUMERIC(13),
    is_deleted BOOLEAN NOT NULL,
    operator_id VARCHAR(10),
    operated_at DATE,
    operated_time TIME,
    PRIMARY KEY (city_code, tax_year, taxpayer_no, assessment_history_no, income_code)
);
CREATE TABLE individual_resident_tax_deduction (
    city_code VARCHAR(6) NOT NULL,
    tax_year INTEGER NOT NULL,
    taxpayer_no VARCHAR(15) NOT NULL,
    assessment_history_no INTEGER NOT NULL,
    deduction_code VARCHAR(3) NOT NULL,
    is_latest BOOLEAN,
    city_ward_code VARCHAR(12),
    deduction_amount NUMERIC(13),
    is_deleted BOOLEAN NOT NULL,
    operator_id VARCHAR(10),
    operated_at DATE,
    operated_time TIME,
    PRIMARY KEY (city_code, tax_year, taxpayer_no, assessment_history_no, deduction_code)
);
CREATE TABLE code_master (
    code_type        VARCHAR(64)  NOT NULL,  -- コード種別（例：gender, prefecture, etc.）
    code_id          VARCHAR(16)  NOT NULL,  -- コード値（例：1, 13, etc.）
    code_name        VARCHAR(128) NOT NULL,  -- コード名称
    code_desc        VARCHAR(256),           -- コード説明（任意）
    code_length      INTEGER,                -- 桁数（任意）
    effective_from   DATE,                   -- 有効開始日（任意）
    effective_to     DATE,                   -- 有効終了日（任意）
    display_order    INTEGER,                -- 並び順（任意）
    created_at       TIMESTAMP,              -- 登録日時（任意）
    updated_at       TIMESTAMP,              -- 更新日時（任意）
    PRIMARY KEY (code_type, code_id)
);
